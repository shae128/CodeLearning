* DONE create class called *Vehicle*
CLOSED: [2019-01-12 Sat 23:42]
** DONE attributes
   CLOSED: [2019-01-12 Sat 21:54]
   Make, Model, Year, Weight
*** DONE NeedsMaintenance boolean set to False
    CLOSED: [2019-01-12 Sat 21:54]
*** DONE TripsSinceMaintenance integer set to 0
    CLOSED: [2019-01-12 Sat 21:54]
** DONE add method to set all attributes
   CLOSED: [2019-01-12 Sat 21:54]

* DONE create subclass *Cars*
CLOSED: [2019-01-12 Sat 23:42]
** DONE attributes
   CLOSED: [2019-01-12 Sat 22:04]
   isDriving
** DONE methods
CLOSED: [2019-01-12 Sat 23:42]
*** DONE *Drive* which set isDriving to True
    CLOSED: [2019-01-12 Sat 22:04]
*** DONE *Stop* which sets isDriving to Flase
    CLOSED: [2019-01-12 Sat 22:04]

* DONE increment TripsSinceMaintenance
CLOSED: [2019-01-12 Sat 23:42]
  Switching *isDriving* from true to false should increment the
  "_TripsSinceMaintenance_" counter.

* DONE change NeedsMaintenance 
CLOSED: [2019-01-12 Sat 23:42]
  when *TripsSinceMaintenance* exceeds *100*, then the *NeedsMaintenance* boolean
  should be set to *true*.

* DONE *Repair* method
CLOSED: [2019-01-12 Sat 23:42]
  Add a "Repair" method to either class that resets the TripsSinceMaintenance to
  zero, and NeedsMaintenance to false.

* DONE creating instances
CLOSED: [2019-01-12 Sat 23:42]
  Create 3 different cars, using your Cars class, and drive them all a different
  number of times. Then print out their values for Make, Model, Year, Weight,
  NeedsMaintenance, and TripsSinceMaintenance

* DONE Extra Credit
CLOSED: [2019-01-13 Sun 00:20]
** DONE Create Planes subclass
CLOSED: [2019-01-13 Sun 00:20]
*** DONE attributes
CLOSED: [2019-01-12 Sat 23:45]
    isFlying
*** DONE methods
CLOSED: [2019-01-13 Sun 00:20]
**** DONE *Flying* which set isFlying to True
CLOSED: [2019-01-13 Sun 00:20]
**** DONE *Landing* which set isFlying to Flase
CLOSED: [2019-01-13 Sun 00:20]

** DONE Reject attempts to fly
CLOSED: [2019-01-13 Sun 00:20]
   Once the NeedsMaintenance boolean gets set to true, any attempt at flight
   should be rejected (return false), and an error message should be printed
   saying that the plane can't fly until it's repaired.

